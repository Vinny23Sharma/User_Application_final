AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  api-userinfo

  SAM Template for api-userinfo


# setting some globals that will be used by the lambda functions
Globals:
  Function:
    Timeout: 10

Resources:
  # creating a dynamodb table 'users' with partition key = 'username'
  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: users
      AttributeDefinitions:
        - AttributeName: username
          AttributeType: S
      KeySchema:
        - AttributeName: username
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  # creating lambda function
  UserInfoProjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: /code
      Handler: app.app
      Runtime: python3.8
      Policies:
        # giving some permissions to lambda for performing CRUD operation on DynamoDB table
        - DynamoDBCrudPolicy:
            TableName:
              !Ref UserTable

      # creating some events for the API gateway
      Events:
        # user sign-in and sign-up api endpoints
        UserSignup:
          Type: Api
          Properties:
            Path: /user
            Method: post
        UserLogin:
          Type: Api
          Properties:
            Path: /user
            Method: get

        # personal information api endpoints
        GetUserPersonalInfo:
          Type: Api
          Properties:
            Path: /user/personal_info/{username}
            Method: get
        PostUserPersonalInfo:
          Type: Api
          Properties:
            Path: /user/personal_info/{username}
            Method: post
        PutUserPersonalInfo:
          Type: Api
          Properties:
            Path: /user/personal_info/{username}
            Method: put

        # Educational information api endpoints
        GetUserEducationalInfo:
          Type: Api
          Properties:
            Path: /user/educational_info/{username}
            Method: get
        PostUserEducationalInfo:
          Type: Api
          Properties:
            Path: /user/educational_info/{username}
            Method: post
        PutUserEducationalInfo:
          Type: Api
          Properties:
            Path: /user/educational_info/{username}
            Method: put

        # Contact information api endpoints
        GetUserContactInfo:
          Type: Api
            Properties:
              Path: /user/personal_info/{username}
              Method: get
        PostUserContactInfo:
          Type: Api
          Properties:
            Path: /user/contact_info/{username}
            Method: post
        PutUserContactInfo:
          Type: Api
          Properties:
            Path: /user/contact_info/{username}
            Method: put